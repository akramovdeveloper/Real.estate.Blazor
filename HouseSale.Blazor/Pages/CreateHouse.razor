@page "/createhouse"
@using HouseSale.Application.UseCases.Categories.Queries;
@using HouseSale.Application.UseCases.CategoryRentSales.Queries;
@using HouseSale.Blazor.PagesBase;
@using HouseSale.Domain.Entities;
@using MediatR;
@inject NavigationManager NavigationManager
@inherits CreateHouseBase
@inject IMediator _meditor;
@code {
    private FluentValidationValidator? _fluentValidationValidator;

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    public static List<Category> categories = new();
    public static List<CategoryRentSale> categoryRentSale = new();


    protected async override Task OnInitializedAsync()
    {
        categories = await _meditor.Send(new GetAllCategoryQuery());

        categoryRentSale = await _meditor.Send(new GetAllCategoryRentSaleQuery());
        var authenticationState = await authenticationStateTask;

        mediator = _meditor;


        if (!authenticationState.User.Identity.IsAuthenticated)
        {

            NavigationManager.NavigateTo($"/identity/account/login?returnUrl=%2Fcreatehouse", forceLoad: true);

        }
    }
}
<AuthorizeView>
    <Authorized Context="Auth">
        @Auth.User.Identity.Name
        <div class="container">

            <EditForm Model="@CreateHouseCommand"  OnValidSubmit="OnSubmitHouse">

                <FluentValidationValidator @ref="_fluentValidationValidator" DisableAssemblyScanning="@true" />
                <ValidationSummary />
                <div class="form-group">
                    <label>
                        Price:
                        <InputNumber @bind-Value="@CreateHouseCommand.Price" class="form-control" />
                        <ValidationMessage For="@(() => CreateHouseCommand.Price)" />
                    </label>
                </div>
                <div class="form-group">
                    <label>
                        Area:
                        <InputNumber @bind-Value="@CreateHouseCommand.Area" class="form-control" />
                    </label>
                </div>
                <div class="form-group">
                    <label>
                        Count of room:
                        <InputNumber @bind-Value="@CreateHouseCommand.CountOfRoom" class="form-control" />
                    </label>
                </div>
                <div class="form-group">
                    <label>
                        Main image:  
                    </label>
                   <InputFile type="file"  class="form-control" @bind-value="@CreateHouseCommand.MainImage" />

                </div>

                @for (int i = 0; i < 10; i++)
                {
                <div class="form-group">
                <label>
                Image @i:
                <InputFile @bind-Value="@CreateHouseCommand.HouseImages" class="form-control" />

                </label>
                </div>
                }
                <div class="form-group">
                    <label>
                        Address street:
                        <InputText @bind-Value="@CreateHouseCommand.CreateAddressCommand.Street" class="form-control" />

                    </label>
                </div>
                <div class="form-group">
                    <label>
                        City:
                        <InputText @bind-Value="@CreateHouseCommand.CreateAddressCommand.City" class="form-control" />

                    </label>
                </div>
                <div class="form-group">
                    <label>
                        State:
                        <InputText @bind-Value="@CreateHouseCommand.CreateAddressCommand.State" class="form-control" />

                    </label>
                </div>
                <div class="form-group">
                    <label>
                        Country:
                        <InputText @bind-Value="@CreateHouseCommand.CreateAddressCommand.Country" class="form-control" />

                    </label>
                </div>
                <div class="form-group">
                    <InputSelect @bind-Value="CreateHouseCommand.CategoryId" class="form-control">

                        @if (CreateHouseCommand.CategoryId == null)
                        {
                            <option selected value="">None</option>
                        }
                        @foreach (var item in categories)
                        {

                            <option value="@item.CategoryId">@item.CategoryName</option>
                        }
                        


                    </InputSelect>
                </div>

                <InputRadioGroup @bind-Value="@CreateHouseCommand.CategoryRentSaleId">
                    @foreach (var item in categoryRentSale)
                    {
                        <div class="form-group">

                            <InputRadio id="@item.CategoryRentSaleName" class="form-check-input" Value="@item.CategoryRentSaleId" />
                            <label for="@item.CategoryRentSaleName" class="form-check-label">
                                @item.CategoryRentSaleName
                            </label>
                        </div>
                    }
                </InputRadioGroup>



                <div class="form-group">
                    <label>
                        Description:
                        <InputText @bind-Value="@CreateHouseCommand.Description" class="form-control" />
                    </label>
                </div>
                <div class="form-group"><button type="submit" class="btn btn-primary">Submit</button> </div>
            </EditForm>
        </div>
    </Authorized>
</AuthorizeView>